{"version":3,"sources":["components/static/responsive.jpg","components/static/bootstrap.jpg","components/static/easy-to-use.jpg","components/static/testimony-1.jpg","components/static/testimony-2.jpg","components/static/testimony-3.jpg","components/SignUp/signUp.js","components/Features/features.js","components/Showcase/showcase.js","components/Stories/stories.js","components/LandingPage/landingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignUp","props","useState","email","setEmail","showSignUp","setShowSignUp","showSuccess","setShowSuccess","className","sign_up_header","placeholder","onChange","e","target","value","onClick","alert","preventDefault","CSSTransition","in","timeout","appear","enter","exit","classNames","unmountOnExit","onEnter","onExited","features","icon","screenDesktopIcon","theme","description","layersIcon","checkCircleIcon","Features","map","item","index","key","showcase","src","responsive_src","bootstrap_src","easy_to_use_src","Showcase","style","order","alt","stories","testimony_1","name","testimony","testimony_2","testimony_3","Stories","LandingPage","state","emails","addEmail","bind","newEmail","currentList","this","push","setState","console","log","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gUC6D5BC,MAvDf,SAAgBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAGeF,oBAAS,GAHxB,mBAGdG,EAHc,KAGFC,EAHE,OAIiBJ,oBAAS,GAJ1B,mBAIdK,EAJc,KAIDC,EAJC,KAqBrB,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,kBAAkBR,EAAMS,gBACrCL,GACA,0BAAMI,UAAU,QACf,yBAAKA,UAAU,cACb,2BAAOA,UAAU,QAAQE,YAAY,sBAAsBC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,WAE9F,yBAAKN,UAAU,UACb,4BAAQA,UAAU,MAAMO,QA1BZ,SAAAH,GACN,KAAVV,EAEFc,MAAM,wCAINT,GAAe,GACfP,EAAMe,QAAQb,IAEhBC,EAAS,IACTS,EAAEK,mBAeM,cAGJ,kBAACC,EAAA,EAAD,CACEC,GAAIb,EACJc,QAAS,CACLC,OAAQ,IACRC,MAAO,IACPC,KAAM,KAEVC,WAAW,mBACXC,eAAa,EACbC,QAAS,kBAAMrB,GAAc,IAC7BsB,SAAU,kBAAMtB,GAAc,KAE5B,yBAAKG,UAAU,WACb,uBAAGA,UAAU,mBAAb,4BACA,4BAAQA,UAAU,eAAeO,QAAS,kBAAMR,GAAe,KAA/D,a,mEC7CRqB,EAAW,CACb,CAACC,KAAMC,IAAmBC,MAAO,mBAAoBC,YAAa,iEAClE,CAACH,KAAMI,IAAYF,MAAO,oBAAqBC,YAAa,gEAC5D,CAACH,KAAMK,IAAiBH,MAAM,cAAeC,YAAa,uEAgB/CG,MAdf,WACI,OACI,yBAAK3B,UAAU,YACZoB,EAASQ,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAK9B,UAAU,UAAU+B,IAAKD,GAC5B,kBAAC,IAAD,CAAM9B,UAAU,OAAOqB,KAAMQ,EAAKR,OAClC,uBAAGrB,UAAU,SAAS6B,EAAKN,OAC3B,uBAAGvB,UAAU,eAAe6B,EAAKL,mB,2DCfzCQ,EAAW,CACb,CAACC,IAAKC,IACNX,MAAO,0BACPC,YAAa,gMAIb,CAACS,IAAKE,IACNZ,MAAO,0BACPC,YAAa,qMAIb,CAACS,IAAKG,IACNb,MAAM,0BACNC,YAAa,6NAwBFa,MAjBf,SAAkB7C,GAEd,OACE,yBAAKQ,UAAU,YACZgC,EAASJ,KAAI,SAACC,EAAMC,GAAP,OACZ,yBAAK9B,UAAU,gBAAgB+B,IAAKD,GAClC,yBAAK9B,UAAY,eAAesC,MAAQ,CAACC,MAAM,GAAD,OAAK,EAAIT,EAAQ,IAAMG,IAAKJ,EAAKI,IAAKO,IAAMX,EAAKN,QAC/F,yBAAKvB,UAAU,gBAAgBsC,MAAQ,CAACC,MAAM,GAAD,OAAKT,EAAQ,KACxD,uBAAG9B,UAAU,kBAAkB6B,EAAKN,OACpC,uBAAGvB,UAAU,wBAAwB6B,EAAKL,oB,2DC/BlDiB,EAAU,CACZ,CAACR,IAAKS,IACNC,KAAM,cACNC,UAAW,6CAEX,CAACX,IAAKY,IACNF,KAAM,UACNC,UAAW,2FAEX,CAACX,IAAKa,IACNH,KAAM,WACNC,UAAW,sEAoBAG,MAhBf,SAAiBvD,GACb,OACE,yBAAKQ,UAAU,qBACb,wBAAIA,UAAU,iBAAd,6BACA,yBAAKA,UAAU,WACZyC,EAAQb,KAAI,SAACC,EAAMC,GAAP,OACX,yBAAK9B,UAAU,QAAQ+B,IAAKD,GAC1B,yBAAK9B,UAAY,WAAWiC,IAAKJ,EAAKI,IAAKO,IAAMX,EAAKc,OACtD,uBAAG3C,UAAU,aAAa6B,EAAKc,MAC/B,uBAAG3C,UAAU,kBAAkB6B,EAAKe,kBCxB7BI,E,kDACnB,WAAYxD,GAAQ,IAAD,8BACjB,cAAMA,IACDyD,MAAQ,CACXC,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBALC,E,8FASJC,G,8EACTC,EAAcC,KAAKN,MAAMC,QACjBM,KAAKH,G,SACXE,KAAKE,SAAS,CAACP,OAASI,I,OAC9BI,QAAQC,IAAIJ,KAAKN,MAAMC,Q,sIAIvB,OACE,yBAAKlD,UAAU,aACb,kBAAC,EAAD,CAAQO,QAASgD,KAAKJ,SAAUlD,eAHf,+EAIjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAvBiC2D,IAAMC,WCKhCC,MARf,WACE,OACE,yBAAK9D,UAAU,OACb,kBAAC,EAAD,QCMc+D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMC,c","file":"static/js/main.8c72678b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/responsive.dbfff7f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap.37b5a1e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/easy-to-use.91db0751.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testimony-1.828e0935.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testimony-2.f3c0271e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/testimony-3.15393c5a.jpg\";","import React, { useState } from 'react';\nimport '../SignUp/signUp.css';\nimport { CSSTransition } from 'react-transition-group'; //using CSS Transition from react-transition-group library\n\n\n\nfunction SignUp(props) {\n  const [email, setEmail] = useState(\"\");\n  // showSignup and showSuccess keep track of which part of the UI is being showed\n  const [showSignUp, setShowSignUp] = useState(true);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const handleOnClick = e => {\n    if (email === \"\"){\n      // alert user to enter an email when they click on sign up button without entering one\n      alert(\"Please enter your email to sign up!\");\n    }\n    else {\n      // show success message when users enter an email\n      setShowSuccess(true);\n      props.onClick(email);\n    }\n    setEmail(\"\");\n    e.preventDefault();\n  };\n  // if showSignUp is true, show the sign up\n  // if showSuccess is true, show the success message\n\n  return (\n    <div className=\"sign-up\">\n      <div className=\"container\">\n        <h1 className=\"sign-up-header\">{props.sign_up_header}</h1>\n        {showSignUp &&\n        (<form className=\"form\">\n          <div className=\"input-form\">\n            <input className=\"input\" placeholder=\"Enter your email...\" onChange={e => setEmail(e.target.value)}></input>\n          </div>\n          <div className=\"button\">\n            <button className=\"btn\" onClick = {handleOnClick}>Sign up!</button>\n          </div>\n        </form>)}\n        <CSSTransition\n          in={showSuccess}\n          timeout={{\n              appear: 500,\n              enter: 300,\n              exit: 200,\n          }}\n          classNames=\"fade-appear-done\"\n          unmountOnExit\n          onEnter={() => setShowSignUp(false)}\n          onExited={() => setShowSignUp(true)}\n          >\n            <div className=\"success\">\n              <p className=\"success-message\">Thank you for signing up</p>\n              <button className=\"btn back-btn\" onClick={() => setShowSuccess(false)}>Back</button>\n            </div>\n        </CSSTransition>\n      </div>\n    </div>);\n}\n\nexport default SignUp;\n","import React from 'react';\nimport '../Features/features.css';\nimport { Icon } from '@iconify/react'; // using icons from iconify\n\nimport screenDesktopIcon from '@iconify/icons-cil/screen-desktop';\nimport layersIcon from '@iconify/icons-simple-line-icons/layers';\nimport checkCircleIcon from '@iconify/icons-cil/check-circle';\n\n\nconst features = [\n    {icon: screenDesktopIcon, theme: \"Fully Responsive\", description: \"This theme will look great on any device, no matter the size!\"},\n    {icon: layersIcon, theme: \"Bootstrap 4 Ready\", description: \"Featuring the latest build of the new Bootstrap 4 framework!\"},\n    {icon: checkCircleIcon, theme:\"Easy to use\", description: \"Ready to use with your own content, or customize the source files!\"}\n];\nfunction Features() {\n    return (\n        <div className=\"features\">\n          {features.map((item, index) =>\n            <div className=\"feature\" key={index}>\n              <Icon className=\"icon\" icon={item.icon}/>\n              <p className=\"theme\">{item.theme}</p>\n              <p className=\"description\">{item.description}</p>\n            </div>)\n            }\n        </div>\n    );\n}\n\nexport default Features;\n","import React from 'react';\nimport '../Showcase/showcase.css';\nimport responsive_src from \"../static/responsive.jpg\";\nimport bootstrap_src from \"../static/bootstrap.jpg\";\nimport easy_to_use_src from \"../static/easy-to-use.jpg\";\n\nconst showcase = [\n    {src: responsive_src,\n    theme: \"Fully Responsive Design\",\n    description: \"When you use a theme created by Start Bootstrap \\\n    , you know that the theme will look great on any device, \\\n    whether it's a phone, tablet, or desktop the page will behave responsively!\"},\n\n    {src: bootstrap_src,\n    theme: \"Updated For Bootstrap 4\",\n    description: \"Newly improved, and full of great utility classes, Bootstrap 4 \\\n     is leading the way in mobile responsive web development! \\\n     All of the themes on Start Bootstrap are now using Bootstrap 4!\"},\n\n    {src: easy_to_use_src,\n    theme:\"Easy to Use & Customize\",\n    description: \"Landing Page is just HTML and CSS with a splash of SCSS for users \\\n    who demand some deeper customization options. Out of the box, just add your content \\\n    and images, and your new landing page will be ready to go!\"}\n\n];\n\n\nfunction Showcase(props){\n\n    return (\n      <div className=\"showcase\">\n        {showcase.map((item, index) =>\n          <div className=\"showcase-item\" key={index}>\n            <img className = \"showcase-img\" style ={{order: `${1 - index % 2}`}} src={item.src} alt= {item.theme}/>\n            <div className=\"showcase-text\" style ={{order: `${index % 2}`}}>\n              <p className=\"showcase-theme\">{item.theme}</p>\n              <p className=\"showcase-description\">{item.description}</p>\n            </div>\n          </div>)\n        }\n      </div>\n    );\n}\n\nexport default Showcase;\n","import React from 'react';\nimport '../Stories/stories.css';\nimport testimony_1 from \"../static/testimony-1.jpg\";\nimport testimony_2 from \"../static/testimony-2.jpg\";\nimport testimony_3 from \"../static/testimony-3.jpg\";\n\nconst stories = [\n    {src: testimony_1,\n    name: \"Margaret E.\",\n    testimony: \"\\\"This is fantastic! Thanks so much guys!\\\"\"},\n\n    {src: testimony_2,\n    name: \"Fred S.\",\n    testimony: \"\\\"Bootstrap is amazing. I've been using it to create lots of super nice landing pages.\\\"\"},\n\n    {src: testimony_3,\n    name: \"Sarah W.\",\n    testimony: \"\\\"Thanks so much for making these free resources available to us!\\\"\"}\n];\n\n\nfunction Stories(props) {\n    return (\n      <div className=\"stories-component\">\n        <h3 className=\"stories-title\">What people are saying...</h3>\n        <div className=\"stories\">\n          {stories.map((item, index) =>\n            <div className=\"story\" key={index}>\n              <img className = \"user-img\" src={item.src} alt= {item.name}/>\n              <p className=\"user-name\">{item.name}</p>\n              <p className=\"user-testimony\">{item.testimony}</p>\n            </div>)}\n        </div>\n      </div>\n    );\n}\n\nexport default Stories;\n","import React from 'react';\nimport SignUp from \"../SignUp/signUp.js\";\nimport Features from \"../Features/features.js\";\nimport Showcase from \"../Showcase/showcase.js\";\nimport Stories from \"../Stories/stories.js\";\n\nexport default class LandingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emails: []\n    };\n    this.addEmail = this.addEmail.bind(this);\n  }\n\n  // add a new email to the list of all sign up emails\n  async addEmail(newEmail) {\n    var currentList = this.state.emails;\n    currentList.push(newEmail);\n    await this.setState({emails : currentList});\n    console.log(this.state.emails);\n  }\n  render() {\n    var sign_up_header = \"Build a landing page for your business or project and generate more leads!\";\n    return (\n      <div className=\"main-page\">\n        <SignUp onClick={this.addEmail} sign_up_header={sign_up_header}/>\n        <Features />\n        <Showcase />\n        <Stories />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport  LandingPage from './components/LandingPage/landingPage.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}